# Development Docker Compose - PostGIS Only
# This configuration runs only the PostGIS database for local development
# Application code runs locally and connects to this containerized database

version: '3.8'

services:
  # PostgreSQL with PostGIS for Development
  postgis:
    build:
      context: .
      dockerfile: Dockerfile.postgis
    container_name: cim_wizard_postgis_dev
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-cim_wizard_integrated}
      POSTGRES_USER: ${POSTGRES_USER:-cim_wizard_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-cim_wizard_password}
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgis_data_dev:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-cim_wizard_user} -d ${POSTGRES_DB:-cim_wizard_integrated}"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    networks:
      - cim_dev_network

  # pgAdmin for database management (optional, comment out if not needed)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: cim_wizard_pgadmin_dev
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@cimwizard.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    depends_on:
      - postgis
    volumes:
      - pgadmin_data_dev:/var/lib/pgadmin
    networks:
      - cim_dev_network
    profiles:
      - tools

volumes:
  postgis_data_dev:
    name: cim_wizard_postgis_data_dev
  pgadmin_data_dev:
    name: cim_wizard_pgadmin_data_dev

networks:
  cim_dev_network:
    name: cim_wizard_dev_network
    driver: bridge